{
  "name": "grunt-svgstore",
  "description": "Merge SVGs from a folder.",
  "version": "0.1.0",
  "homepage": "https://github.com/FWeinb/grunt-svgstore",
  "author": {
    "name": "Fabrice Weinberg",
    "email": "Fabrice@weinberg.me"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/FWeinb/grunt-svgstore.git"
  },
  "bugs": {
    "url": "https://github.com/FWeinb/grunt-svgstore/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/FWeinb/grunt-svgstore/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-nodeunit": "~0.4.0"
  },
  "dependencies": {
    "chalk": "^0.4.0",
    "cheerio": "^0.16.0",
    "js-beautify": "^1.5.1",
    "multiline": "^0.3.4"
  },
  "peerDependencies": {
    "grunt": "~0.4.5"
  },
  "keywords": [
    "svg",
    "icon",
    "sprite"
  ],
  "readme": "# grunt-svgstore [![NPM version](https://badge.fury.io/js/grunt-svgstore.svg)](http://badge.fury.io/js/grunt-svgstore) [![Build Status](https://travis-ci.org/FWeinb/grunt-svgstore.svg?branch=master)](https://travis-ci.org/FWeinb/grunt-svgstore)\n\n> Merge SVGs from a folder.\n\n## Why?\nBecause [Chris Coyer](http://shoptalkshow.com/episodes/103-louis-lazaris/#t=33:52) asked.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-svgstore --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-svgstore');\n```\n\n## The \"svgstore\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `svgstore` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  svgstore: {\n    options: {\n      prefix : 'icon-', // This will prefix each ID\n      svg: { // will be added as attributes to the resulting SVG\n        viewBox : '0 0 100 100'\n      }\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n});\n```\n\n### Options\n\n#### options.prefix\nType: `String`\nDefault value: `''`\n\nA string value that is used to prefix each filename to generate the id.\n\n#### options.svg\nType: `Object`\nDefault value: `{}`\n\nAn object that is used to generate attributes for the resulting `svg` file.\n```js\n{\n  viewBox: '0 0 100 100'\n}\n```\nwill result in:\n\n```svg\n<svg viewBox=\"0 0 100 100\">\n[...]\n```\n\n#### options.formatting (since 0.0.4)\nType: `Object` or `boolean`\nDefault value: `false`\n\nFormatting options for generated code.\n\nTo format the generated HTML, set `formatting` with [options](https://github.com/einars/js-beautify#options) like: `{indent_size : 2}`, which in context looks like:\n\n```js\ndefault: {\n  options: {\n    formatting : {\n      indent_size : 2\n    }\n  }\n```\nSee [js-beautify](https://github.com/einars/js-beautify) for more options.\n\n#### options.includedemo (since 0.1.0)\nType: `boolean`\nDefault value: `false`\n\nThis will include a demo HTML (named like `destName + -demo.html`) from where you can copy your `<use>` blocks.\n\n### Usage Examples\n\nThis example will merge all elements from the `svgs` folder into the `<defs>`-Block of the `dest.svg`. You can use that SVG in HTML like:\n\n```html\n<!-- Include dest.svg -->\n\n[...]\n\n<svg><use xlink:href=\"#filename\" /></svg>\n````\n\n```js\ngrunt.initConfig({\n  svgstore: {\n    options: {},\n    default : {\n      files: {\n        'dest/dest.svg': ['svgs/*.svg'],\n      },\n    },\n  },\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n  * 0.1.0 Always add `xmlns` namspace. Added the `includedemo` option. Fixed Issues [#20](https://github.com/FWeinb/grunt-svgstore/issues/20), [#19](https://github.com/FWeinb/grunt-svgstore/issues/19), [#18](https://github.com/FWeinb/grunt-svgstore/issues/18)\n  * 0.0.4 Fixed issue with referencing ids with `url()` (fix [#12](https://github.com/FWeinb/grunt-svgstore/issues/12))\n  * 0.0.3 Added `options.formatting` to format svg via [js-beautify](https://github.com/einars/js-beautify)\n  * 0.0.2 Fixed npm dependencies\n  * 0.0.1 Inital release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-svgstore@0.1.0",
  "dist": {
    "shasum": "089a7d1ec54ce954001283419e4c4bdddeb20e2a"
  },
  "_from": "grunt-svgstore@0.1.0",
  "_resolved": "https://registry.npmjs.org/grunt-svgstore/-/grunt-svgstore-0.1.0.tgz"
}
